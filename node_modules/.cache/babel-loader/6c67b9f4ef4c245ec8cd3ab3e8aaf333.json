{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\starting-project\\\\hw1\\\\src\\\\components\\\\Expenses.jsx\",\n    _s = $RefreshSig$();\n\n//import React from 'react'\nimport Card from './UI/Card';\nimport ExpensesItem from './ExpensesItem';\nimport ExpensesFilter from './ExpensesFilter';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Expenses(props) {\n  _s();\n\n  const [filteredYear, setFilteredYear] = useState('2022');\n\n  const filterChangeHandler = selectedYear => {\n    setFilteredYear(selectedYear);\n  };\n\n  const filteredExpenses = props.item.filter(expense => {\n    return expense.date.getFullYear().toString() === filteredYear;\n  });\n\n  let expensesContent = /*#__PURE__*/_jsxDEV(\"p\", {\n    style: {\n      textAlign: 'center',\n      color: 'white'\n    },\n    children: \"No Expenses Found\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 24\n  }, this);\n\n  if (filteredExpenses.length > 0) {\n    expensesContent = filteredExpenses.map(element => {\n      return /*#__PURE__*/_jsxDEV(ExpensesItem, {\n        title: element.title,\n        amount: element.amount,\n        date: element.date\n      }, element.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 5\n      }, this);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"expenses\",\n    children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n      selected: filteredYear,\n      onChangeFilter: filterChangeHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 4\n    }, this), expensesContent]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 3\n  }, this); // const helloHandler = ()=>{\n  // \talert('hellooo')\n  // }\n  // return(\n  //     <div>\n  //     <ExpensesItem title = {props.item[0].title} amout = {props.item[0].amout} date = {props.item[0].date}/>\n  //     <ExpensesItem title = {props.item[1].title} amout = {props.item[1].amout} date = {props.item[1].date}/>\n  // \t<ExpensesItem title = {props.item[2].title} amout = {props.item[2].amout} date = {props.item[2].date}/>\n  //     <ExpensesItem title = {props.item[3].title} amout = {props.item[3].amout} date = {props.item[3].date}/>\n  // \t<ExpensesItem title = {props.item[4].title} amout = {props.item[4].amout} date = {props.item[4].date}/>\n  // \t<button onClick={helloHandler}>click</button>\n  // {/* \tне вызываем функцию а просто даем как аргумент */}\n  //     </div>\n  // )\n}\n\n_s(Expenses, \"VsY+CdjhJzXvjVXvetgq5EU6jt4=\");\n\n_c = Expenses;\nexport default Expenses;\n\nvar _c;\n\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"sources":["C:/Users/User/Desktop/starting-project/hw1/src/components/Expenses.jsx"],"names":["Card","ExpensesItem","ExpensesFilter","useState","Expenses","props","filteredYear","setFilteredYear","filterChangeHandler","selectedYear","filteredExpenses","item","filter","expense","date","getFullYear","toString","expensesContent","textAlign","color","length","map","element","title","amount","id"],"mappings":";;;AAAA;AACA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AACA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACxB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCJ,QAAQ,CAAC,MAAD,CAAhD;;AACA,QAAMK,mBAAmB,GAAIC,YAAD,IAAkB;AAC7CF,IAAAA,eAAe,CAACE,YAAD,CAAf;AACA,GAFD;;AAGA,QAAMC,gBAAgB,GAAGL,KAAK,CAACM,IAAN,CAAWC,MAAX,CAAmBC,OAAD,IAAa;AACvD,WAAOA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,OAA0CV,YAAjD;AACA,GAFwB,CAAzB;;AAGA,MAAIW,eAAe,gBAAG;AAAG,IAAA,KAAK,EAAE;AAAEC,MAAAA,SAAS,EAAE,QAAb;AAAuBC,MAAAA,KAAK,EAAE;AAA9B,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAtB;;AAGA,MAAIT,gBAAgB,CAACU,MAAjB,GAA0B,CAA9B,EAAiC;AAChCH,IAAAA,eAAe,GAAGP,gBAAgB,CAACW,GAAjB,CAAsBC,OAAD,IAAa;AACnD,0BACC,QAAC,YAAD;AAEC,QAAA,KAAK,EAAEA,OAAO,CAACC,KAFhB;AAGC,QAAA,MAAM,EAAED,OAAO,CAACE,MAHjB;AAIC,QAAA,IAAI,EAAEF,OAAO,CAACR;AAJf,SACMQ,OAAO,CAACG,EADd;AAAA;AAAA;AAAA;AAAA,cADD;AAQA,KATiB,CAAlB;AAUA;;AAED,sBACC,QAAC,IAAD;AAAM,IAAA,SAAS,EAAC,UAAhB;AAAA,4BACC,QAAC,cAAD;AACC,MAAA,QAAQ,EAAEnB,YADX;AAEC,MAAA,cAAc,EAAEE;AAFjB;AAAA;AAAA;AAAA;AAAA,YADD,EAKES,eALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADD,CAxBwB,CAmCxB;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;;GArDQb,Q;;KAAAA,Q;AAsDT,eAAeA,QAAf","sourcesContent":["//import React from 'react'\r\nimport Card from './UI/Card'\r\nimport ExpensesItem from './ExpensesItem'\r\nimport ExpensesFilter from './ExpensesFilter'\r\nimport { useState } from 'react'\r\nfunction Expenses(props) {\r\n\tconst [filteredYear, setFilteredYear] = useState('2022')\r\n\tconst filterChangeHandler = (selectedYear) => {\r\n\t\tsetFilteredYear(selectedYear)\r\n\t}\r\n\tconst filteredExpenses = props.item.filter((expense) => {\r\n\t\treturn expense.date.getFullYear().toString() === filteredYear\r\n\t})\r\n\tlet expensesContent = <p style={{ textAlign: 'center', color: 'white' }}>No Expenses Found</p>\r\n\t\r\n\r\n\tif (filteredExpenses.length > 0) {\r\n\t\texpensesContent = filteredExpenses.map((element) => {\r\n\t\t\treturn (\r\n\t\t\t\t<ExpensesItem\r\n\t\t\t\t\tkey={element.id}\r\n\t\t\t\t\ttitle={element.title}\r\n\t\t\t\t\tamount={element.amount}\r\n\t\t\t\t\tdate={element.date}\r\n\t\t\t\t/>\r\n\t\t\t)\r\n\t\t})\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Card className='expenses'>\r\n\t\t\t<ExpensesFilter\r\n\t\t\t\tselected={filteredYear}\r\n\t\t\t\tonChangeFilter={filterChangeHandler}\r\n\t\t\t/>\r\n\t\t\t{expensesContent}\r\n\t\r\n\t\t</Card>\r\n\t)\r\n\r\n\t// const helloHandler = ()=>{\r\n\t// \talert('hellooo')\r\n\t// }\r\n\t// return(\r\n\r\n\t//     <div>\r\n\r\n\t//     <ExpensesItem title = {props.item[0].title} amout = {props.item[0].amout} date = {props.item[0].date}/>\r\n\t//     <ExpensesItem title = {props.item[1].title} amout = {props.item[1].amout} date = {props.item[1].date}/>\r\n\t// \t<ExpensesItem title = {props.item[2].title} amout = {props.item[2].amout} date = {props.item[2].date}/>\r\n\t//     <ExpensesItem title = {props.item[3].title} amout = {props.item[3].amout} date = {props.item[3].date}/>\r\n\t// \t<ExpensesItem title = {props.item[4].title} amout = {props.item[4].amout} date = {props.item[4].date}/>\r\n\t// \t<button onClick={helloHandler}>click</button>\r\n\t// {/* \tне вызываем функцию а просто даем как аргумент */}\r\n\r\n\t//     </div>\r\n\r\n\t// )\r\n}\r\nexport default Expenses\r\n"]},"metadata":{},"sourceType":"module"}